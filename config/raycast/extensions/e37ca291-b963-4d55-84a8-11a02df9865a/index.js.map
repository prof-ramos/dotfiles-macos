{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { getApplications, getSelectedFinderItems, showToast, Toast } from \"@raycast/api\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { stat } from \"fs/promises\";\n\nconst execPromise = promisify(exec);\n\n/**\n * Gets the selected Finder window.\n * @throws \u2014 An error when Finder is not the frontmost application.\n * @returns A Promise that resolves with the selected Finder window's path.\n */\nconst getSelectedFinderWindow = (): Promise<string> => {\n  const appleScript = `\n  if application \"Finder\" is running and frontmost of application \"Finder\" then\n    tell app \"Finder\"\n      set finderWindow to window 1\n      set finderWindowPath to (POSIX path of (target of finderWindow as alias))\n      return finderWindowPath\n    end tell\n  else \n    error \"Could not get the selected Finder window\"\n  end if\n `;\n  return new Promise((resolve, reject) => {\n    const child = exec(`osascript -e '${appleScript}'`, (error, stdout, stderr) => {\n      if (error || stderr) reject(Error(\"Could not get the selected Finder window\"));\n      resolve(stdout.trim());\n    });\n\n    child.on(\"close\", () => {\n      child.kill();\n    });\n  });\n};\n\nexport default async () => {\n  const applications = await getApplications();\n  const sublimeTextApplication = applications.find((app) => app.bundleId === \"com.sublimetext.4\");\n\n  if (!sublimeTextApplication) {\n    await showToast({\n      style: Toast.Style.Failure,\n      title: \"Sublime Text 4 is not installed\",\n      primaryAction: {\n        title: \"Install Sublime Text 4\",\n        onAction: () => open(\"https://www.sublimetext.com/download\"),\n      },\n    });\n    return;\n  }\n\n  const sublPath = `${sublimeTextApplication.path}/Contents/SharedSupport/bin/subl`;\n\n  try {\n    const selectedFinderItems = await getSelectedFinderItems();\n    if (selectedFinderItems.length) {\n      for (const finderItem of selectedFinderItems) {\n        const stats = await stat(finderItem.path);\n        if (stats.isDirectory()) {\n          // Open the directory in a new window\n          await execPromise(`\"${sublPath}\" -n \"${finderItem.path}\"`);\n        } else {\n          // Open the file in a new tab\n          await execPromise(`\"${sublPath}\" -a \"${finderItem.path}\"`);\n        }\n      }\n      return;\n    }\n    const selectedFinderWindow = await getSelectedFinderWindow();\n    const stats = await stat(selectedFinderWindow);\n    if (stats.isDirectory()) {\n      await execPromise(`\"${sublPath}\" -n \"${selectedFinderWindow}\"`);\n    } else {\n      await execPromise(`\"${sublPath}\" -a \"${selectedFinderWindow}\"`);\n    }\n    return;\n  } catch (error: any) {\n    await showToast({\n      style: Toast.Style.Failure,\n      title: \"No Finder items or window selected\",\n    });\n  }\n};\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA0E,wBAC1EC,EAAqB,yBACrBC,EAA0B,gBAC1BC,EAAqB,uBAEfC,KAAc,aAAU,MAAI,EAO5BC,EAA0B,IAAuB,CACrD,IAAMC,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAWpB,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,IAAMC,KAAQ,QAAK,iBAAiBH,CAAW,IAAK,CAACI,EAAOC,EAAQC,IAAW,EACzEF,GAASE,IAAQJ,EAAO,MAAM,0CAA0C,CAAC,EAC7ED,EAAQI,EAAO,KAAK,CAAC,CACvB,CAAC,EAEDF,EAAM,GAAG,QAAS,IAAM,CACtBA,EAAM,KAAK,CACb,CAAC,CACH,CAAC,CACH,EAEOX,EAAQ,SAAY,CAEzB,IAAMe,GADe,QAAM,mBAAgB,GACC,KAAMC,GAAQA,EAAI,WAAa,mBAAmB,EAE9F,GAAI,CAACD,EAAwB,CAC3B,QAAM,aAAU,CACd,MAAO,QAAM,MAAM,QACnB,MAAO,kCACP,cAAe,CACb,MAAO,yBACP,SAAU,IAAM,KAAK,sCAAsC,CAC7D,CACF,CAAC,EACD,MACF,CAEA,IAAME,EAAW,GAAGF,EAAuB,IAAI,mCAE/C,GAAI,CACF,IAAMG,EAAsB,QAAM,0BAAuB,EACzD,GAAIA,EAAoB,OAAQ,CAC9B,QAAWC,KAAcD,GACT,QAAM,QAAKC,EAAW,IAAI,GAC9B,YAAY,EAEpB,MAAMb,EAAY,IAAIW,CAAQ,SAASE,EAAW,IAAI,GAAG,EAGzD,MAAMb,EAAY,IAAIW,CAAQ,SAASE,EAAW,IAAI,GAAG,EAG7D,MACF,CACA,IAAMC,EAAuB,MAAMb,EAAwB,GAC7C,QAAM,QAAKa,CAAoB,GACnC,YAAY,EACpB,MAAMd,EAAY,IAAIW,CAAQ,SAASG,CAAoB,GAAG,EAE9D,MAAMd,EAAY,IAAIW,CAAQ,SAASG,CAAoB,GAAG,EAEhE,MACF,MAAqB,CACnB,QAAM,aAAU,CACd,MAAO,QAAM,MAAM,QACnB,MAAO,oCACT,CAAC,CACH,CACF",
  "names": ["index_exports", "__export", "index_default", "__toCommonJS", "import_api", "import_child_process", "import_util", "import_promises", "execPromise", "getSelectedFinderWindow", "appleScript", "resolve", "reject", "child", "error", "stdout", "stderr", "sublimeTextApplication", "app", "sublPath", "selectedFinderItems", "finderItem", "selectedFinderWindow"]
}
